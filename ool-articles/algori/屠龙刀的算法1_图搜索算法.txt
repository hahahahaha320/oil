孙冰  程序员
https://www.zhihu.com/people/sun-bing-10-38
https://www.zhihu.com/question/51511511


提名一个在程序员实际工作中比较有用，个人认为堪称屠龙刀的算法：图搜索算法。已经看到有人提名了搜索，我稍微写详细一点。
其实这也是贪心法的基本形式。

这个算法学过数据结构的人都学过，形式非常简单，如下：

定义 OPEN 和 CLOSE 集合
while OPEN 不为空
    x <- 从 OPEN 中取出一个
    扩展 x 的相关结点加入 OPEN
    x 加入 CLOSE
end


打完收工。

如果要处理图、树结构，或者做循环嵌套关系的数据处理，有非常大的概率会用到这个算法。

这个算法的好处是一个算法相当于一堆算法，主要取决第三行中怎么从 OPEN 中取 x。

取深度最深的，就是 DFS；

取深度最浅的，就是 BFS；

根据一个代价评估函数来选，就是 A 算法；

代价评估函数设计的牛X，就是 A* 算法；

将一些没必要处理的节点从OPEN中删掉，就是剪枝；

随便怎么取，把过程记录下来，就是拓扑排序；

取到离 CLOSE 中节点的最近的一个，就是求最小生成树的 Prim 算法；

取到离  CLOSE  中节点的最近一个，中间再调整一下距离值，就是 Dijkstra；

……应该还有，想到再补充。

在我看来，图搜索算法算是一个分水岭，实际工作中不需要这个算法解决的简单问题，用基本的数据结构加循环差不多可以直观的搞定。
而这个算法搞不定的，大概就需要很烧脑的一些算法了，至少是动态规划起步。（当然动态规划十分的重要而有用，可以看成是倚天剑，需要武功高强方能游刃有余。）

至于排序、hash之类的算法，实际工作中都是直接调函数库的，基本不会再写一遍。