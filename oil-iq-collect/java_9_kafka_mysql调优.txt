1.使用过消息队列吗?在什么场景使用的?用来解决什么问题?
kafka，rocketmq。
1).削峰填谷，把高峰请求后延到低谷的时候处理。
2).解耦，使得服务之间不会紧耦合。
3).异步处理，使请求处理时间尽可能的短，提高吞吐量。


2.使用消息队列时如何保证可靠性?
投递消息时，使用ack机制保证写入成功；
消息队列使用分别在不同机器上的多个副本，提高可用性和性能；
消息确实处理成功之后才修改offset


3.MQ有可能发生重复消费吗,如何解决?
可能，当消费过了之后没有提交消费标志，之后可能重复消费。
对处理过的消息id进行记录，遇到重复消息则略过。或者消息处理时实现幂等。

4.在数据库中查询语句速度很慢,如何优化?
用explain查看查询计划。
可以通过增加索引，减少表格连接，优化sql尽快排除掉大量的记录。


5.数据库事务有哪些特性?事务的隔离级别有啷几种?
ACID：原子性，一致性，隔离性，持久性
隔离级别：读未提交，读已提交(RC)，可重复读(RR)，可序列化
主要是通过MVCC多版本并发控制来实现的。


6.如何对SQL语句进行优化?
可以通过增加索引，减少表格连接，优化sql尽快排除掉大量的记录。

7.mysql的锁有哪些？
可以通过两个维度来对锁进行分类：
1).排他性分类：共享锁，排它锁
2).锁住的范围：表锁，行锁，间隙锁，临键锁
意向锁则是一种优化技术，只要上了行锁，就会有意向锁。是一种快速判断是否有行锁的技术。


8.mysql的索引是如何实现的？聚集和非聚集索引的区别？
通过B+树实现索引。B+树是一种多叉排序树，可以大大减少磁盘io的次数。
聚集索引：叶子节点存放的是行记录，依次从主键，唯一索引，隐含的行号选择一个作为聚集索引。
非聚集索引：叶子节点存放的是聚集索引的ID。查询时，需要两次才能定位到行记录，第一次定位到聚集索引的ID，第二次通过ID定位到行记录。





