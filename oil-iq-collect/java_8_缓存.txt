1. Redis和 Memcache有什么区别?该如何选用?
redis支持五种数据结构：string，list，set，hash，zset
redis支持数据持久化到硬盘

2.你用到过哪些Redis的数据结构?用在什么场景下?
string：基本使用
hash：登录时token对应的用户信息
list：作为异步消息队列使用，使用rpush/lpush操作入队列，使用lpop 和 rpop来出队列
set：
zset： 实现延时队列



3. Redis有哪些持久化方式,区别是什么?
aof：记录操作日志
rdb：记录快照


4. Redis的过期机制是怎样的? Redis有哪些淘汰策略?
设置值的时候同时设置过期时间，取值时判断是否过期。
淘汰策略：LRU：最近最少使用，random：随机选择。
设置了过期时间的lru和random，所有的lru和random。

5.如何保证Redis的高并发和高可用?
高并发：数据分片，多个master同时提供服务
高可用：每个master都有slave，当master出问题时切换到slave。

6.如何使用Reds实现延时队列?如何使用Redis实现分布式锁?
可以使用 Redis 的 sorted set 来实现延时队列，使用时间戳做 Score，消费方使用 zrangbyscore 来获取当前时间之前的数据。
简单场景下分布式锁可以使用 setnx 实现，使用 setnx 设置 key，如果返回 1 表示设置成功，即获取锁成功，如果返回 0 则获取锁失败。setnx 需要同时使用 px 参数设置超时时间，防止获取锁的实例宕机后产生死锁。
严格场景下，可以考虑使用 RedLock 方案。但是实现比较复杂。直白点说，就是采用N（通常是5）个独立的redis节点，同时setnx，如果多数节点成功，就拿到了锁，这样就可以允许少数（2）个节点挂掉了。整个取锁、释放锁的操作和单节点类似。
